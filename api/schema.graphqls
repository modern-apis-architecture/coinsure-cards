type Card {
    id: ID!
    valid_until: String!
    tags: [String!]
    name: String!
    user: User!
    external: External!
}

type External {
    card_id: String!
    account_id: String!
}

input CreateCardInput {
    tags: [String!]
    name: String!
    personalData: PersonalData!
}

input PersonalData {
    name: String!
    lastName: String!
    motherName: String!
    document: String!
    birthDate: String!
    address: Address!
    phone: Phone!
}

input Address{
    zipCode: String!
    number: String!
}

input Phone{
    code: String!
    number: String!
}

type User {
    id: String!
}

type Mutation {
    createCard(input: CreateCardInput!): Card!
}

type Query {
    findCard(id: ID!): Card
}

schema {
    query: Query
    mutation: Mutation
}